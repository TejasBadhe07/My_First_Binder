from sre_parse import State
from tkinter import*
from tkinter import ttk



    

class LibraryManagementSystem:
    def __init__(self,root):
        self.root=root
        self.root.title("Library Management System")
        self.root.geometry("1500x800+0+0")
        
        lbltitle=Label(self.root,text="Library Management System", bg="powder blue", fg="green", bd=20, relief=RIDGE, font=("times new roman", 50, "bold"),padx=235, pady=6)
        lbltitle.pack(side=TOP, fill=X)
        
        frame=Frame(self.root,bd=12,relief=RIDGE,padx=20,bg="powder blue")
        frame.place(x=0, y=130, width=1350, height=600)
        
        
        
        #================================================Data Frame Left=====================================================================
        
        DataFrameLeft=LabelFrame(frame,text="Library Membership ", bg="powder blue", fg="black", bd=12, relief=RIDGE, font=("times new roman", 12, "bold"))
        DataFrameLeft.place(x=0, y=5, width=790, height=320)
        
        lblMember=Label(DataFrameLeft,bg="powder blue",text="Member Type", font=("times new roman", 11, "bold"),padx=2,pady=6)
        lblMember.grid(row=0,column=0,sticky=W)
        
        comMember=ttk.Combobox(DataFrameLeft,font=("times new roman",11,"bold"),width=27, state="readonly")
        comMember["value"]=("Admin Staff", "Student","Lecturer")
        comMember.grid(row=0, column=1)
        
        lblPRN_NO=Label(DataFrameLeft,bg="powder blue",text="PRN NO.", font=("times new roman", 11, "bold"),padx=2,pady=6)
        lblPRN_NO.grid(row=1,column=0,sticky=W)
        txtPRN_NO=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        txtPRN_NO.grid(row=1, column=1)
        
        lblTitle=Label(DataFrameLeft,bg="powder blue",text="PRN NO.", font=("times new roman", 11, "bold"),padx=2,pady=6)
        lbltitle.grid(row=1,column=0,sticky=W)
        txtTitle=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        txtTitle.grid(row=1, column=1)
        
        lblFirstName = Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "First Name",padx=2, pady=6, bg="powder blue")
        lblFirstName.grid(row=3,column=0,sticky=W)
        txtFirstName=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        txtFirstName.grid(row=3, column=1)
        
        lblLastName = Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Last Name",padx=2, pady=6, bg="powder blue")
        lblLastName.grid(row=4,column=0,sticky=W)
        lblLastName=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblLastName.grid(row=4, column=1)
        
        lblAddress1 = Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Address 1",padx=2, pady=6, bg="powder blue")
        lblAddress1.grid(row=5, column=0,sticky=W)
        lblAddress1=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblAddress1.grid(row=5, column=1)
        
        lblAddress2= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Address 2",padx=2, pady=6, bg="powder blue")
        lblAddress2.grid(row=6, column=0,sticky=W)
        lblAddress2=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblAddress2.grid(row=6, column=1)
        
        lblPostCode= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Pin Code ",padx=2, pady=6, bg="powder blue")
        lblPostCode.grid(row=7, column=0,sticky=W)
        lblPostCode=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblPostCode.grid(row=7, column=1)
        
        lblMobile= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Mobile Number ",padx=2, pady=6, bg="powder blue")
        lblMobile.grid(row=8, column=0,sticky=W)
        lblMobile=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblMobile.grid(row=8, column=1)
        
        #-----------------------------------Column 2 Data frame left-----------------------------------------------
        
        lblBook_Id= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Book ID ",padx=2, pady=6, bg="powder blue")
        lblBook_Id.grid(row=0, column=2,sticky=W)
        lblBook_Id=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblBook_Id.grid(row=0, column=3)
        
        
        lblBook_Title= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Book Title ",padx=2, pady=6, bg="powder blue")
        lblBook_Title.grid(row=1, column=2,sticky=W)
        lblBook_Title=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblBook_Title.grid(row=1, column=3)
        
        
        lblAuther= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "AutherName",padx=2, pady=6, bg="powder blue")
        lblAuther.grid(row=3, column=2,sticky=W)
        lblAuther=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblAuther.grid(row=3, column=3)
        
        
        lblDateBorrowed= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Date Borrowed",padx=2, pady=6, bg="powder blue")
        lblDateBorrowed.grid(row=4, column=2,sticky=W)
        lblDateBorrowed=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblDateBorrowed.grid(row=4, column=3)
        
        
        lblDueDate= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Date Due",padx=2, pady=6, bg="powder blue")
        lblDueDate.grid(row=5, column=2,sticky=W)
        lblDueDate=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblDueDate.grid(row=5, column=3)
              
        
        lblLateReturnFine= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Late Return Fine",padx=2, pady=6, bg="powder blue")
        lblLateReturnFine.grid(row=6, column=2,sticky=W)
        lblLateReturnFine=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblLateReturnFine.grid(row=6, column=3)
        
        
        lblDateOverDue= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Date OverDue",padx=2, pady=6, bg="powder blue")
        lblDateOverDue.grid(row=7, column=2,sticky=W)
        lblDateOverDue=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblDateOverDue.grid(row=7, column=3)
        
        
        lblActualPrice= Label(DataFrameLeft, font = ("arial", 11, "bold"),text = "Actual Price",padx=2, pady=6, bg="powder blue")
        lblActualPrice.grid(row=8, column=2,sticky=W)
        lblActualPrice=Entry(DataFrameLeft,font=("times new roman",11,"bold"),width=27)
        lblActualPrice.grid(row=8, column=3)
        
        
        #--------------------------------------Data Frame Right------------------------------------------------------
        
        DataFrameRight=LabelFrame(frame,text="Book Details",bg="powder blue", fg="black", bd=12, relief=RIDGE, font=("times new roman", 12, "bold"))
        DataFrameRight.place(x=800, y=5, width= 485, height=320)
        
        self.txtBox=Text(DataFrameRight, font=("arial",12,"bold"),width=32, height=16, padx=2, pady=6)
        self.txtBox.grid(row=0, column=2)
        
        listScrollbar = Scrollbar(DataFrameRight)
        listScrollbar.grid(row=0, column=1, sticky="ns")
        
        listBooks = ["Clean Code: A Handbook of Agile Software Craftsmanship","Introduction to Algorithms",
                     "Structure and Interpretation of Computer Programs","The Clean Coder: A Code of Conduct for Professional Programmers",
                     "Code Complete: A Practical Handbook of Software Construction","Design Patterns: Elements of Reusable Object-Oriented Software",
                     "The Pragmatic Programmer","Head First Design Patterns: A Brain-Friendly Guide", 
                     "Refactoring: Improving the Design of Existing Code","The Art of Computer Programming, Volumes 1-4",
                     "2666. by Roberto Bola√±o","All About Love. by bell hooks","Desert Solitaire. by Edward Abbey","Disgrace. by J. M. Coetzee",
                     "Geek Love. by Katherine Dunn","Gilead. by Marilynne Robinson","Giovanni's Room. by James Baldwin",
                     "A Good Man Is Hard to Find and Other Stories."]
        
        listBox=Listbox(DataFrameRight,font=("arial",11,"bold"),width=18,height=16)
        listBox.grid(row=0, column=0, padx=3)
        listScrollbar.config(command=listBox.yview)
        
        for item in listBooks:
            listBox.insert(END, item)
        
        # =============================================Button Frames===========================================================
        
        
        framebuttons=Frame(self.root,bd=12,relief=RIDGE,padx=20,bg="powder blue")
        framebuttons.place(x=0, y=440, width=1350, height=57)
        
        btnAddData=Button(framebuttons, text="Add Data", font =("arial",11,"bold"),width=23,bg="blue",fg="white")
        btnAddData.grid(row=0, column=0)
        
        btnAddData=Button(framebuttons, text="Show Data", font =("arial",11,"bold"),width=23,bg="blue",fg="white")
        btnAddData.grid(row=0, column=1)
        
        btnAddData=Button(framebuttons, text="Update", font =("arial",11,"bold"),width=23,bg="blue",fg="white")
        btnAddData.grid(row=0, column=2)
        
        btnAddData=Button(framebuttons, text="Delete", font =("arial",11,"bold"),width=23,bg="blue",fg="white")
        btnAddData.grid(row=0, column=3)
        
        btnAddData=Button(framebuttons, text="Reset", font =("arial",11,"bold"),width=23,bg="blue",fg="white")
        btnAddData.grid(row=0, column=4)
        
        btnAddData=Button(framebuttons, text="Exit", font =("arial",11,"bold"),width=23,bg="blue",fg="white")
        btnAddData.grid(row=0, column=5)
        # =============================================Information Frames===========================================================
        
        
        FrameDetails=Frame(self.root,bd=12,relief=RIDGE,padx=20,bg="powder blue")
        FrameDetails.place(x=0, y=490, width=1350, height=240)
        
        
        Table_frame=Frame(FrameDetails, bd=6, relief=RIDGE, bg="powder blue")
        Table_frame.place(x=0,y=2,width=1290, height=190)
        
        xscroll=ttk.Scrollbar(Table_frame,orient=HORIZONTAL)
        yscroll=ttk.Scrollbar(Table_frame,orient=VERTICAL)
        
        self.library_table=ttk.Treeview(Table_frame, column=("Member Type","PRN No","Title","First Name","Last Name","Address 1",
                                                           "Address 2","Post ID","Mobile No.","Book Id","Book Title","Book Auther",
                                                           "Date Borrowed","Due Date","Late Return Fine","Date Overdue","Actual Price"),xscrollcommand=xscroll.set,yscrollcommand=yscroll.set)
        
        xscroll.pack(side=BOTTOM,fill=X)
        xscroll.pack(side=RIGHT,fill=Y)
        
        xscroll.config(command=self.library_table.xview)
        yscroll.config(command=self.library_table.yview)
        
        self.library_table.heading("Member Type", text ="Member Type")
        self.library_table.heading("PRN No", text ="PRN No")
        self.library_table.heading("Title", text ="Title")
        self.library_table.heading("First Name", text ="First Name")
        self.library_table.heading("Last Name", text ="Last Name")
        self.library_table.heading("Address 1", text ="Address 1")
        self.library_table.heading("Address 2", text ="Address 2")
        self.library_table.heading("Post ID", text ="Post ID")
        self.library_table.heading("Mobile No.", text ="Mobile No")
        self.library_table.heading("Book Id", text ="Book Id")
        self.library_table.heading("Book Title", text ="Book Title")
        self.library_table.heading("Book Auther", text ="Book Auther")
        self.library_table.heading("Date Borrowed", text ="Date Borrowed")
        self.library_table.heading("Due Date", text ="Due Date")
        self.library_table.heading("Late Return Fine", text ="Late Return Fine")
        self.library_table.heading("Date Overdue", text ="Date Overdue")
        self.library_table.heading("Actual Price", text ="Actual Price")
        
        self.library_table["show"]="headings"
        self.library_table.pack(fill=BOTH,expand=1)
        
        
        
        
        
        
if __name__=="__main__":
    root=Tk()
    obj=LibraryManagementSystem(root)
    root.mainloop()
